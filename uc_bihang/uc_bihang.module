<?php
require_once("uc_bihang.pages.inc");
require_once("/lib/Bihang.php");

define ('BITCOIN_SMALL_LOGO', base_path() . drupal_get_path('module', 'uc_bihang') ."/bitcoin.png");
define ('BIHANG_WEBSITE', "https://www.bihang.com");
define ('BIHANG_EXPIRATION_TIME', 10);



/**
 * Implements hook_payment_method().
 *
 * @return array
 */
function uc_bihang_payment_method()
{
	// only show it if we aren't in debug mode, or are an admin
	if ((!variable_get('uc_bitpay_debug_mode', 0) ||
        user_access('access administration menu')))
    {
		$title = '<img src="' . BITCOIN_SMALL_LOGO . '" ' .
			'style="position:relative; top:5px; margin-right:6px;" />' .
			t('Pay with Bitcoins via Bihang.');

		$methods[] = array(
			'id'         => 'bihang',
			'name'       => t('Bihang'),
			'title'      => $title,
			'review'     => t('Bitcoin via Bihang'),
			'desc'       => t('Make a payment using bitcoins.'),
			'callback'   => 'uc_payment_method_bihang',
			'weight'     => 4,
			'checkout'   => FALSE,
			'no_gateway' => TRUE,
		);

		return $methods;
	}
    else
    {
		return array();
	}
}

/**
 * Settings form for the Bitpay payment method module.
 * Not directly hooked into by Ubercart; called by
 * uc_payment_method_bitpay()
 *
 * @return array
 */
function uc_bihang_settings_form()
{
	global $base_url;
	$form = array();

	$form['uc_bihang_api_key'] = array(
		'#type'          => 'textfield',
		'#title'         => t('Bihang API key'),
		'#default_value' => variable_get('uc_bihang_api_key', ''),
		'#description'   =>
			t('This key must be kept private. To view or edit your API keys, please go to your merchant account at ') . '<a href="' . BIHANG_WEBSITE . '" target="_blank">' . t("Bihang's website") . '</a>.',
	);

	$form['uc_bihang_api_secret'] = array(
		'#type'          => 'textfield',
		'#title'         => t('Bihang API secret'),
		'#default_value' => variable_get('uc_bihang_api_secret', ''),
		'#description'   =>
			t('This secret must be kept private. To view or edit your API secret, please go to your merchant account at ') . '<a href="' . BIHANG_WEBSITE . '" target="_blank">' . t("Bihang's website") . '</a>.',
	);	
	return $form;

}

/**
 * Payment method callback for the Bihang payment method
 *
 * @param $op
 * @param $order
 *
 * @return
 */
function uc_payment_method_bihang($op, &$order)
{
	global $base_url;
    switch ($op)
    {
		case 'settings':
			return uc_bihang_settings_form();
            break;
		case 'cart-details':
			$details = t('The price will be converted to bitcoins at the current to-the-minute exchange rate, and you will have ') . BIHANG_EXPIRATION_TIME . t(' minutes to send payment before the order expires.');
			return $details;
            break;
		case 'customer-view':
			$button_id = db_result(db_query("SELECT button_id FROM {uc_payment_bihang} WHERE order_id = %d", $order->order_id));
			$txt        = '';
            if ( !empty($button_id) )
            {
				$url = BIHANG_WEBSITE.'/merchant/mPayOrderStemp1.do?buttonid='.$button_id;
				$txt .=  '<a href="' . $url . '" target="_blank">Pay It</a>';
			}
			return $txt;
         break;  
		case 'order-submit':
			$client = Bihang::withApiKey(variable_get('uc_bihang_api_key',''),variable_get('uc_bihang_api_secret',''));

			if( variable_get('clean_url', '0') == 0 ){
				$callback_url = $base_url . '/?q=uc_bihang/notifications'; 
				$success_url  = $base_url . '/?q=cart/checkout'; 
			}else{
				$callback_url = $base_url . '/uc_bihang/notifications';
				$success_url  = $base_url . '/cart/checkout'; 
			}

			$site_url = variable_get('uc_bihang_base_url', $base_url);
			$params = array(
						'name'           => 'Order #'.$order->order_id,
						'price'          => uc_order_get_total($order),
						'price_currency' => $order->currency,
						'callback_url'   => $callback_url,
						'success_url'    => $success_url,
				);
			try{
				$result = $client->buttonsButton($params);
	            
				if( $result && $result->button ){
				    db_query("INSERT INTO {uc_payment_bihang} (button_id, order_id) VALUES ('%s', %d)", $result->button->id, $order->order_id);
				}				
			}catch(Exception $e) {
				error_log($e);
			}
			break;
	}
}

/**
 * Implements hook_menu().
 *
 * @return array
 */
function uc_bihang_menu()
{
	// Always accessible, accepts POST data from bihang's servers
	// when being notified of status changes to an invoice.
	$notify_url = '?q=uc_bihang/notifications';
	if( variable_get('clean_url', '0') == 1 ){
		$notify_url = 'uc_bihang/notifications';
	}
	$items[$notify_url] = array(
        'title'           => 'link Notifications',
        'access callback' => TRUE,
        'page callback'   => 'uc_bihang_notification',
        'type'            => MENU_CALLBACK,
        'file'            => 'uc_bihang.pages.inc',
	);

	return $items;
}
